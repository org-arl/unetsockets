{"version":3,"file":"unetjs.js","sources":["../node_modules/fjage/dist/esm/fjage.js","../src/unetutils.js","../src/unetsocket.js"],"sourcesContent":["/* fjage.js v2.2.1 */\n\n/**\n* An action represented by a message. The performative actions are a subset of the\n* FIPA ACL recommendations for interagent communication.\n* @enum {string}\n*/\nconst Performative = {\n  REQUEST: 'REQUEST',               // Request an action to be performed\n  AGREE: 'AGREE',                   // Agree to performing the requested action\n  REFUSE: 'REFUSE',                 // Refuse to perform the requested action\n  FAILURE: 'FAILURE',               // Notification of failure to perform a requested or agreed action\n  INFORM: 'INFORM',                 // Notification of an event\n  CONFIRM: 'CONFIRM',               // Confirm that the answer to a query is true\n  DISCONFIRM: 'DISCONFIRM',         // Confirm that the answer to a query is false\n  QUERY_IF: 'QUERY_IF',             // Query if some statement is true or false\n  NOT_UNDERSTOOD: 'NOT_UNDERSTOOD', // Notification that a message was not understood\n  CFP: 'CFP',                       // Call for proposal\n  PROPOSE: 'PROPOSE',               // Response for CFP\n  CANCEL: 'CANCEL'                  // Cancel pending request\n};\n\n////// common utilities\n\n// generate random ID with length 4*len characters\n/**\n *\n * @private\n * @param {number} len\n */\nfunction _guid(len) {\n  const s4 = () => Math.floor((1 + Math.random()) * 0x10000).toString(16).substring(1);\n  return Array.from({ length: len }, s4).join('');\n}\n\n\n/**\n * A simple and lightweight implementation of UUIDv7.\n *\n * UUIDv7 is a time-based UUID version that is lexicographically sortable and\n * is designed to be used as a database key.\n *\n * The structure is as follows:\n * 0                   1                   2                   3\n * 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n * +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n * |                           unix_ts_ms                          |\n * +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n * |          unix_ts_ms           |  ver  |      rand_a           |\n * +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n * |var|                        rand_b                             |\n * +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n * |                            rand_b                             |\n * +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n *\n * - unix_ts_ms (48 bits): Unix timestamp in milliseconds.\n * - ver (4 bits): Version, set to 7.\n * - rand_a (12 bits): Random data.\n * - var (2 bits): Variant, set to '10'.\n * - rand_b (62 bits): Random data.\n */\nclass UUID7 {\n    /**\n     * Private constructor to create a UUID7 from a byte array.\n     * @param {Uint8Array} bytes The 16 bytes of the UUID.\n     */\n    constructor(bytes) {\n        if (bytes.length !== 16) {\n            throw new Error('UUID7 must be constructed with a 16-byte array.');\n        }\n        this.bytes = bytes;\n    }\n\n    /**\n     * Generates a new UUIDv7.\n     * @returns {UUID7} A new UUIDv7 instance.\n     */\n    static generate() {\n        const bytes = new Uint8Array(16);\n        const randomBytes = crypto.getRandomValues(new Uint8Array(10));\n        const timestamp = Date.now();\n\n        // Set the 48-bit timestamp\n        // JavaScript numbers are 64-bit floats, but bitwise operations treat them\n        // as 32-bit signed integers. We need to handle the 48-bit timestamp carefully.\n        const timestampHi = Math.floor(timestamp / 2 ** 16);\n        const timestampLo = timestamp % 2 ** 16;\n\n        bytes[0] = (timestampHi >> 24) & 0xff;\n        bytes[1] = (timestampHi >> 16) & 0xff;\n        bytes[2] = (timestampHi >> 8) & 0xff;\n        bytes[3] = timestampHi & 0xff;\n        bytes[4] = (timestampLo >> 8) & 0xff;\n        bytes[5] = timestampLo & 0xff;\n\n        // Copy the 10 random bytes\n        bytes.set(randomBytes, 6);\n\n        // Set the 4-bit version (0111) in byte 6\n        bytes[6] = (bytes[6] & 0x0f) | 0x70;\n\n        // Set the 2-bit variant (10) in byte 8\n        bytes[8] = (bytes[8] & 0x3f) | 0x80;\n\n        return new UUID7(bytes);\n    }\n\n    /**\n     * Extracts the timestamp from the UUID.\n     * @returns {number} The Unix timestamp in milliseconds.\n     */\n    getTimestamp() {\n        let timestamp = 0;\n        timestamp = this.bytes[0] * 2 ** 40;\n        timestamp += this.bytes[1] * 2 ** 32;\n        timestamp += this.bytes[2] * 2 ** 24;\n        timestamp += this.bytes[3] * 2 ** 16;\n        timestamp += this.bytes[4] * 2 ** 8;\n        timestamp += this.bytes[5];\n        return timestamp;\n    }\n\n    /**\n     * Formats the UUID into the standard string representation.\n     * @returns {string} The UUID string.\n     */\n    toString() {\n        let result = '';\n        for (let i = 0; i < 16; i++) {\n            result += this.bytes[i].toString(16).padStart(2, '0');\n            if (i === 3 || i === 5 || i === 7 || i === 9) {\n                result += '-';\n            }\n        }\n        return result;\n    }\n}\n\n// src/index.ts\nvar isBrowser = typeof window !== \"undefined\" && typeof window.document !== \"undefined\";\nvar isNode = (\n  // @ts-expect-error\n  typeof process !== \"undefined\" && // @ts-expect-error\n  process.versions != null && // @ts-expect-error\n  process.versions.node != null\n);\nvar isWebWorker = typeof self === \"object\" && self.constructor && self.constructor.name === \"DedicatedWorkerGlobalScope\";\nvar isJsDom = typeof window !== \"undefined\" && window.name === \"nodejs\" || typeof navigator !== \"undefined\" && \"userAgent\" in navigator && typeof navigator.userAgent === \"string\" && (navigator.userAgent.includes(\"Node.js\") || navigator.userAgent.includes(\"jsdom\"));\n(\n  // @ts-expect-error\n  typeof Deno !== \"undefined\" && // @ts-expect-error\n  typeof Deno.version !== \"undefined\" && // @ts-expect-error\n  typeof Deno.version.deno !== \"undefined\"\n);\ntypeof process !== \"undefined\" && process.versions != null && process.versions.bun != null;\n\nconst SOCKET_OPEN = 'open';\nconst SOCKET_OPENING = 'opening';\nconst DEFAULT_RECONNECT_TIME$1 = 5000;       // ms, delay between retries to connect to the server.\n\nvar createConnection;\n\n/**\n* @class\n* @ignore\n*/\nclass TCPConnector {\n\n  /**\n  * Create an TCPConnector to connect to a fjage master over TCP\n  * @param {Object} opts\n  * @param {string} [opts.hostname='localhost'] - hostname/ip address of the master container to connect to\n  * @param {number} [opts.port=1100] - port number of the master container to connect to\n  * @param {boolean} [opts.keepAlive=true] - try to reconnect if the connection is lost\n  * @param {boolean} [opts.debug=false] - debug info to be logged to console?\n  * @param {number} [opts.reconnectTime=5000] - time before reconnection is attempted after an error\n  */\n  constructor(opts = {}) {\n    let host = opts.hostname || 'localhost';\n    let port = opts.port || 1100;\n    this._keepAlive = opts.keepAlive;\n    this._reconnectTime = opts.reconnectTime || DEFAULT_RECONNECT_TIME$1;\n    this.url = new URL('tcp://localhost');\n    this.url.hostname = host;\n    this.url.port = port.toString();\n    this._buf = '';\n    this._firstConn = true;               // if the Gateway has managed to connect to a server before\n    this._firstReConn = true;             // if the Gateway has attempted to reconnect to a server before\n    this.pendingOnOpen = [];              // list of callbacks make as soon as gateway is open\n    this.connListeners = [];              // external listeners wanting to listen connection events\n    this.debug = false;\n    this._sockInit(host, port);\n  }\n\n\n  _sendConnEvent(val) {\n    this.connListeners.forEach(l => {\n      l && {}.toString.call(l) === '[object Function]' && l(val);\n    });\n  }\n\n  _sockInit(host, port){\n    if (!createConnection){\n      try {\n        // @ts-ignore\n        import('net').then(module => {\n          createConnection = module.createConnection;\n          this._sockSetup(host, port);\n        });\n      }catch(error){\n        if(this.debug) console.log('Unable to import net module');\n      }\n    }else {\n      this._sockSetup(host, port);\n    }\n  }\n\n  _sockSetup(host, port){\n    if(!createConnection) return;\n    try{\n      this.sock = createConnection({ 'host': host, 'port': port });\n      this.sock.setEncoding('utf8');\n      this.sock.on('connect', this._onSockOpen.bind(this));\n      this.sock.on('error', this._sockReconnect.bind(this));\n      this.sock.on('close', () => {this._sendConnEvent(false);});\n      this.sock.send = data => {this.sock.write(data);};\n    } catch (error) {\n      if(this.debug) console.log('Connection failed to ', this.sock.host + ':' + this.sock.port);\n      return;\n    }\n  }\n\n  _sockReconnect(){\n    if (this._firstConn || !this._keepAlive || this.sock.readyState == SOCKET_OPENING || this.sock.readyState == SOCKET_OPEN) return;\n    if (this._firstReConn) this._sendConnEvent(false);\n    this._firstReConn = false;\n    setTimeout(() => {\n      this.pendingOnOpen = [];\n      this._sockSetup(this.url.hostname, this.url.port);\n    }, this._reconnectTime);\n  }\n\n  _onSockOpen() {\n    this._sendConnEvent(true);\n    this._firstConn = false;\n    this.sock.on('close', this._sockReconnect.bind(this));\n    this.sock.on('data', this._processSockData.bind(this));\n    this.pendingOnOpen.forEach(cb => cb());\n    this.pendingOnOpen.length = 0;\n    this._buf = '';\n  }\n\n  _processSockData(s){\n    this._buf += s;\n    var lines = this._buf.split('\\n');\n    lines.forEach((l, idx) => {\n      if (idx < lines.length-1){\n        if (l && this._onSockRx) this._onSockRx.call(this,l);\n      } else {\n        this._buf = l;\n      }\n    });\n  }\n\n  toString(){\n    let s = '';\n    s += 'TCPConnector [' + this.sock ? this.sock.remoteAddress.toString() + ':' + this.sock.remotePort.toString() : '' + ']';\n    return s;\n  }\n\n  /**\n  * Write a string to the connector\n  * @param {string} s - string to be written out of the connector to the master\n  * @return {boolean} - true if connect was able to write or queue the string to the underlying socket\n  */\n  write(s){\n    if (!this.sock || this.sock.readyState == SOCKET_OPENING){\n      this.pendingOnOpen.push(() => {\n        this.sock.send(s+'\\n');\n      });\n      return true;\n    } else if (this.sock.readyState == SOCKET_OPEN) {\n      this.sock.send(s+'\\n');\n      return true;\n    }\n    return false;\n  }\n\n  /**\n  * @callback TCPConnectorReadCallback\n  * @ignore\n  * @param {string} s - incoming message string\n  */\n\n  /**\n  * Set a callback for receiving incoming strings from the connector\n  * @param {TCPConnectorReadCallback} cb - callback that is called when the connector gets a string\n  */\n  setReadCallback(cb){\n    if (cb && {}.toString.call(cb) === '[object Function]') this._onSockRx = cb;\n  }\n\n  /**\n  * Add listener for connection events\n  * @param {function} listener - a listener callback that is called when the connection is opened/closed\n  */\n  addConnectionListener(listener){\n    this.connListeners.push(listener);\n  }\n\n  /**\n  * Remove listener for connection events\n  * @param {function} listener - remove the listener for connection\n  * @return {boolean} - true if the listner was removed successfully\n  */\n  removeConnectionListener(listener) {\n    let ndx = this.connListeners.indexOf(listener);\n    if (ndx >= 0) {\n      this.connListeners.splice(ndx, 1);\n      return true;\n    }\n    return false;\n  }\n\n  /**\n  * Close the connector\n  */\n  close(){\n    if (!this.sock) return;\n    if (this.sock.readyState == SOCKET_OPENING) {\n      this.pendingOnOpen.push(() => {\n        this.sock.send('{\"alive\": false}\\n');\n        this.sock.removeAllListeners('connect');\n        this.sock.removeAllListeners('error');\n        this.sock.removeAllListeners('close');\n        this.sock.destroy();\n      });\n    } else if (this.sock.readyState == SOCKET_OPEN) {\n      this.sock.send('{\"alive\": false}\\n');\n      this.sock.removeAllListeners('connect');\n      this.sock.removeAllListeners('error');\n      this.sock.removeAllListeners('close');\n      this.sock.destroy();\n    }\n  }\n}\n\nconst DEFAULT_RECONNECT_TIME = 5000;       // ms, delay between retries to connect to the server.\n\n/**\n* @class\n* @ignore\n*/\nclass WSConnector {\n\n  /**\n  * Create an WSConnector to connect to a fjage master over WebSockets\n  * @param {Object} opts\n  * @param {string} [opts.hostname='localhost'] - hostname/ip address of the master container to connect to\n  * @param {number} [opts.port=80] - port number of the master container to connect to\n  * @param {string} [opts.pathname=\"/\"] - path of the master container to connect to\n  * @param {boolean} [opts.keepAlive=true] - try to reconnect if the connection is lost\n  * @param {boolean} [opts.debug=false] - debug info to be logged to console?\n  * @param {number} [opts.reconnectTime=5000] - time before reconnection is attempted after an error\n  */\n  constructor(opts = {}) {\n    let host = opts.hostname || 'localhost';\n    let port = opts.port || 80;\n    this.url = new URL('ws://localhost');\n    this.url.hostname = host;\n    this.url.port = port.toString();\n    this.url.pathname = opts.pathname || '/';\n    this._keepAlive = opts.keepAlive;\n    this._reconnectTime = opts.reconnectTime || DEFAULT_RECONNECT_TIME;\n    this.debug = opts.debug || false;      // debug info to be logged to console?\n    this._firstConn = true;               // if the Gateway has managed to connect to a server before\n    this._firstReConn = true;             // if the Gateway has attempted to reconnect to a server before\n    this.pendingOnOpen = [];              // list of callbacks make as soon as gateway is open\n    this.connListeners = [];              // external listeners wanting to listen connection events\n    this._websockSetup(this.url);\n  }\n\n  _sendConnEvent(val) {\n    this.connListeners.forEach(l => {\n      l && {}.toString.call(l) === '[object Function]' && l(val);\n    });\n  }\n\n  _websockSetup(url){\n    try {\n      this.sock = new WebSocket(url);\n      this.sock.onerror = this._websockReconnect.bind(this);\n      this.sock.onopen = this._onWebsockOpen.bind(this);\n      this.sock.onclose = () => {this._sendConnEvent(false);};\n    } catch (error) {\n      if(this.debug) console.log('Connection failed to ', url);\n      return;\n    }\n  }\n\n  _websockReconnect(){\n    if (this._firstConn || !this._keepAlive || this.sock.readyState == this.sock.CONNECTING || this.sock.readyState == this.sock.OPEN) return;\n    if (this._firstReConn) this._sendConnEvent(false);\n    this._firstReConn = false;\n    if(this.debug) console.log('Reconnecting to ', this.sock.url);\n    setTimeout(() => {\n      this.pendingOnOpen = [];\n      this._websockSetup(this.sock.url);\n    }, this._reconnectTime);\n  }\n\n  _onWebsockOpen() {\n    if(this.debug) console.log('Connected to ', this.sock.url);\n    this._sendConnEvent(true);\n    this.sock.onclose = this._websockReconnect.bind(this);\n    this.sock.onmessage = event => { if (this._onWebsockRx) this._onWebsockRx.call(this,event.data); };\n    this._firstConn = false;\n    this._firstReConn = true;\n    this.pendingOnOpen.forEach(cb => cb());\n    this.pendingOnOpen.length = 0;\n  }\n\n  toString(){\n    let s = '';\n    s += 'WSConnector [' + this.sock ? this.sock.url.toString() : '' + ']';\n    return s;\n  }\n\n  /**\n  * Write a string to the connector\n  * @param {string} s - string to be written out of the connector to the master\n  */\n  write(s){\n    if (!this.sock || this.sock.readyState == this.sock.CONNECTING){\n      this.pendingOnOpen.push(() => {\n        this.sock.send(s+'\\n');\n      });\n      return true;\n    } else if (this.sock.readyState == this.sock.OPEN) {\n      this.sock.send(s+'\\n');\n      return true;\n    }\n    return false;\n  }\n\n  /**\n  * @callback WSConnectorReadCallback\n  * @ignore\n  * @param {string} s - incoming message string\n  */\n\n  /**\n  * Set a callback for receiving incoming strings from the connector\n  * @param {WSConnectorReadCallback} cb - callback that is called when the connector gets a string\n  * @ignore\n  */\n  setReadCallback(cb){\n    if (cb && {}.toString.call(cb) === '[object Function]') this._onWebsockRx = cb;\n  }\n\n  /**\n  * Add listener for connection events\n  * @param {function} listener - a listener callback that is called when the connection is opened/closed\n  */\n  addConnectionListener(listener){\n    this.connListeners.push(listener);\n  }\n\n  /**\n  * Remove listener for connection events\n  * @param {function} listener - remove the listener for connection\n  * @return {boolean} - true if the listner was removed successfully\n  */\n  removeConnectionListener(listener) {\n    let ndx = this.connListeners.indexOf(listener);\n    if (ndx >= 0) {\n      this.connListeners.splice(ndx, 1);\n      return true;\n    }\n    return false;\n  }\n\n  /**\n  * Close the connector\n  */\n  close(){\n    if (!this.sock) return;\n    if (this.sock.readyState == this.sock.CONNECTING) {\n      this.pendingOnOpen.push(() => {\n        this.sock.send('{\"alive\": false}\\n');\n        this.sock.onclose = null;\n        this.sock.close();\n      });\n    } else if (this.sock.readyState == this.sock.OPEN) {\n      this.sock.send('{\"alive\": false}\\n');\n      this.sock.onclose = null;\n      this.sock.close();\n    }\n  }\n}\n\n/* global Buffer */\n\n/**\n* Class representing a fjage's on-the-wire JSON message. A JSONMessage object\n* contains all the fields that can be a part of a fjage JSON message. The class\n* provides methods to create JSONMessage objects from raw strings and to\n* convert JSONMessage objects to JSON strings in the format of the fjage on-the-wire\n* protocol. See {@link https://fjage.readthedocs.io/en/latest/protocol.html#json-message-request-response-attributes fjage documentation}\n* for more details on the JSON message format.\n*\n* Most users will not need to create JSONMessage objects directly, but rather use the Gateway and Message classes\n* to send and receive messages. However, this class can be useful for low-level access to the fjage protocol\n* or for generating/consuming the fjåge protocol messages without having them be transmitted over a network.\n*\n* @example\n* const jsonMsg = new JSONMessage();\n* jsonMsg.action = 'send';\n* jsonMsg.message = new Message();\n* jsonMsg.message.sender = new AgentID('agent1');\n* jsonMsg.message.recipient = new AgentID('agent2');\n* jsonMsg.message.perf = Performative.INFORM;\n* jsonMsg.toJSON(); // Converts to JSON string in the fjage on-the-wire protocol format\n*\n* @example\n* const jsonString = '{\"id\":\"1234\",...}'; // JSON string representation of a JSONMessage\n* const jsonMsg = new JSONMessage(jsonString); // Parses the JSON string into a JSONMessage object\n* jsonMsg.message; // Access the Message object contained in the JSONMessage\n*\n* @class\n* @property {string} [id] - A UUID assigned to each JSONMessage object.\n* @property {string} [action] - Denotes the main action the object is supposed to perform.\n* @property {string} [inResponseTo] - This attribute contains the action to which this object is a response to.\n* @property {AgentID} [agentID] - An AgentID. This attribute is populated in objects which are responses to objects requesting the ID of an agent providing a specific service.\n* @property {Array<AgentID>} [agentIDs] - This attribute is populated in objects which are responses to objects requesting the IDs of agents providing a specific service, or objects which are responses to objects requesting a list of all agents running in a container.\n* @property {Array<string>} [agentTypes] - This attribute is optionally populated in objects which are responses to objects requesting a list of all agents running in a container. If populated, it contains a list of agent types running in the container, with a one-to-one mapping to the agent IDs in the \"agentIDs\" attribute.\n* @property {string} [service] - Used in conjunction with \"action\" : \"agentForService\" and \"action\" : \"agentsForService\" to query for agent(s) providing this specific service.\n* @property {Array<string>} [services] - This attribute is populated in objects which are responses to objects requesting the services available with \"action\" : \"services\".\n* @property {boolean} [answer] - This attribute is populated in objects which are responses to query objects with \"action\" : \"containsAgent\".\n* @property {Message} [message] - This holds the main payload of the message. The structure and format of this object is discussed in the {@link https://fjage.readthedocs.io/en/latest/protocol.html#json-message-request-response-attributes fjage documentation}.\n* @property {boolean} [relay] - This attribute defines if the target container should relay (forward) the message to other containers it is connected to or not.\n* @property {Object} [creds] - Credentials to be used for authentication.\n* @property {Object} [auth] - Authentication information to be used for the message.\n*\n*\n*/\nclass JSONMessage {\n\n  /**\n  * @param {String} [jsonString] - JSON string to be parsed into a JSONMessage object.\n  * @param {Object} [owner] - The owner of the JSONMessage object, typically the Gateway instance.\n  */\n  constructor(jsonString, owner) {\n    this.id = UUID7.generate().toString(); // unique JSON message ID\n    this.action =  null;\n    this.inResponseTo =  null;\n    this.agentID = null;\n    this.agentIDs = null;\n    this.agentTypes = null;\n    this.service =  null;\n    this.services = null;\n    this.answer =  null;\n    this.message = null;\n    this.relay =  null;\n    this.creds =  null;\n    this.auth =  null;\n    this.name =  null;\n    if (jsonString && typeof jsonString === 'string') {\n      try {\n        const parsed = JSON.parse(jsonString, _decodeBase64);\n        if (parsed.message) parsed.message = Message.fromJSON(parsed.message);\n        if (parsed.agentID) parsed.agentID = AgentID.fromJSON(parsed.agentID, owner);\n        if (parsed.agentIDs) parsed.agentIDs = parsed.agentIDs.map(id => AgentID.fromJSON(id, owner));\n        Object.assign(this, parsed);\n      } catch (e) {\n        throw new Error('Invalid JSON string: ' + e.message);\n      }\n    }  }\n\n  /**\n  * Creates a JSONMessage object to send a message.\n  *\n  * @param {Message} msg\n  * @param {boolean} [relay=false] - whether to relay the message\n  * @returns {JSONMessage} - JSONMessage object with request to send a message\n  */\n  static createSend(msg, relay=false){\n    if (!(msg instanceof Message)) {\n      throw new Error('Invalid message type');\n    }\n    const jsonMsg = new JSONMessage();\n    jsonMsg.action = Actions.SEND;\n    jsonMsg.relay = relay;\n    jsonMsg.message = msg;\n    return jsonMsg;\n  }\n\n  /**\n  * Creates a JSONMessage object to update WantsMessagesFor list.\n  *\n  * @param {Array<AgentID>} agentIDs - array of AgentID objects for which the gateway wants messages\n  * @returns {JSONMessage} - JSONMessage object with request to update WantsMessagesFor list\n  */\n  static createWantsMessagesFor(agentIDs) {\n    if (!Array.isArray(agentIDs) || agentIDs.length === 0) {\n      throw new Error('agentIDNames must be a non-empty array');\n    }\n    const jsonMsg = new JSONMessage();\n    jsonMsg.action = Actions.WANTS_MESSAGES_FOR;\n    jsonMsg.agentIDs = agentIDs;\n    return jsonMsg;\n  }\n\n  /**\n  * Creates a JSONMessage object to request the list of agents.\n  *\n  * @returns {JSONMessage} - JSONMessage object with request for the list of agents\n  */\n  static createAgents(){\n    const jsonMsg = new JSONMessage();\n    jsonMsg.action = Actions.AGENTS;\n    jsonMsg.id = UUID7.generate().toString(); // unique JSON message ID\n    return jsonMsg;\n  }\n\n  /**\n  * Creates a JSONMessage object to check if an agent is contained\n  *\n  * @param {AgentID} agentID - AgentID of the agent to check\n  * @returns {JSONMessage} - JSONMessage object with request to check if the agent is contained\n  */\n  static createContainsAgent(agentID) {\n    if (!(agentID instanceof AgentID)) {\n      throw new Error('agentID must be an instance of AgentID');\n    }\n    const jsonMsg = new JSONMessage();\n    jsonMsg.action = Actions.CONTAINS_AGENT;\n    jsonMsg.id = UUID7.generate().toString(); // unique JSON message ID\n    jsonMsg.agentID = agentID;\n    return jsonMsg;\n  }\n\n  /**\n  * Creates a JSONMessage object to get an agent for a service.\n  *\n  * @param {string} service - service which the agent must provide\n  * @returns {JSONMessage} - JSONMessage object with request for an agent providing the service\n  */\n  static createAgentForService(service) {\n    if (typeof service !== 'string' || service.length === 0) {\n      throw new Error('service must be a non-empty string');\n    }\n    const jsonMsg = new JSONMessage();\n    jsonMsg.action = Actions.AGENT_FOR_SERVICE;\n    jsonMsg.id = UUID7.generate().toString(); // unique JSON message ID\n    jsonMsg.service = service;\n    return jsonMsg;\n  }\n\n  /**\n  * Creates a JSONMessage object to get all agents for a service.\n  *\n  * @param {string} service - service which the agents must provide\n  * @returns {JSONMessage} - JSONMessage object with request for all agent providing the service\n  */\n  static createAgentsForService(service) {\n    if (typeof service !== 'string' || service.length === 0) {\n      throw new Error('service must be a non-empty string');\n    }\n    const jsonMsg = new JSONMessage();\n    jsonMsg.action = Actions.AGENTS_FOR_SERVICE;\n    jsonMsg.id = UUID7.generate().toString(); // unique JSON message ID\n    jsonMsg.service = service;\n    return jsonMsg;\n  }\n\n  /**\n  * Converts the JSONMessage object to a JSON string in the format of the\n  * fjage on-the-wire protocol. If the JSONMessage contains a Message or\n  * AgentID objects, they will be serialized as per the fjåge protocol.\n  *\n  * @returns {string} - JSON string representation of the message\n  */\n  toJSON() {\n    if (!this.action && !this.id) {\n      throw new Error('Neither action nor id is set. Cannot serialize JSONMessage.');\n    }\n    const jsonObj = {};\n    // Add property if not null or undefined\n    if (this.id) jsonObj.id = this.id;\n    if (this.action) jsonObj.action = this.action;\n    if (this.inResponseTo) jsonObj.inResponseTo = this.inResponseTo;\n    if (this.agentID) jsonObj.agentID = this.agentID.toJSON();\n    if (this.agentIDs) {\n      jsonObj.agentIDs = this.agentIDs.map(id => id.toJSON());\n      if (jsonObj.agentIDs.length === 0) delete jsonObj.agentIDs; // remove empty array\n    }\n    if (this.service) jsonObj.service = this.service;\n    if (this.services) {\n      jsonObj.services = this.services;\n      if (jsonObj.services.length === 0) delete jsonObj.services; // remove empty array\n    }\n    if (this.answer) jsonObj.answer = this.answer;\n    if (this.message) jsonObj.message = this.message;\n    if (this.relay) jsonObj.relay = this.relay;\n    if (this.creds) jsonObj.creds = this.creds;\n    if (this.auth) jsonObj.auth = this.auth;\n    if (this.name) jsonObj.name = this.name;\n    return JSON.stringify(jsonObj);\n  }\n\n  toString() {\n    return this.toJSON();\n  }\n}\n\n\n/**\n* Actions supported by the fjåge JSON message protocol. See\n* {@link https://fjage.readthedocs.io/en/latest/protocol.html#json-message-request-response-attributes fjage documentation} for more details.\n*\n* @enum {string} Actions\n*/\nconst Actions = {\n  AGENTS : 'agents',\n  CONTAINS_AGENT : 'containsAgent',\n  AGENT_FOR_SERVICE : 'agentForService',\n  AGENTS_FOR_SERVICE : 'agentsForService',\n  SEND : 'send',\n  WANTS_MESSAGES_FOR : 'wantsMessagesFor'};\n\n////// private utilities\n\n\n/**\n* Decode large numeric arrays encoded in base64 back to array format.\n*\n* @private\n*\n* @param {string} _k - key (unused)\n* @param {any} d - data\n* @returns {Array} - decoded data in array format\n* */\nfunction _decodeBase64(_k, d) {\n  if (d === null) return null;\n  if (typeof d == 'object' && 'clazz' in d && 'data' in d && d.clazz.startsWith('[') && d.clazz.length == 2) {\n    return _b64toArray(d.data, d.clazz) || d;\n  }\n  return d;\n}\n\n/**\n* Convert a base64 encoded string to an array of numbers of the specified data type.\n*\n* @private\n*\n* @param {string} base64 - base64 encoded string\n* @param {string} dtype - data type, e.g. '[B' for byte array, '[S' for short array, etc.\n* @param {boolean} [littleEndian=true] - whether to use little-endian byte order\n*/\nfunction _b64toArray(base64, dtype, littleEndian=true) {\n  let s = _atob(base64);\n  let len = s.length;\n  let bytes = new Uint8Array(len);\n  for (var i = 0; i < len; i++)\n    bytes[i] = s.charCodeAt(i);\n  let rv = [];\n  let view = new DataView(bytes.buffer);\n  switch (dtype) {\n    case '[B': // byte array\n    for (i = 0; i < len; i++)\n      rv.push(view.getUint8(i));\n    break;\n    case '[S': // short array\n    for (i = 0; i < len; i+=2)\n      rv.push(view.getInt16(i, littleEndian));\n    break;\n    case '[I': // integer array\n    for (i = 0; i < len; i+=4)\n      rv.push(view.getInt32(i, littleEndian));\n    break;\n    case '[J': // long array\n    for (i = 0; i < len; i+=8)\n      rv.push(view.getBigInt64(i, littleEndian));\n    break;\n    case '[F': // float array\n    for (i = 0; i < len; i+=4)\n      rv.push(view.getFloat32(i, littleEndian));\n    break;\n    case '[D': // double array\n    for (i = 0; i < len; i+=8)\n      rv.push(view.getFloat64(i, littleEndian));\n    break;\n    default:\n    return;\n  }\n  return rv;\n}\n\n// node.js safe atob function\n/**\n* @private\n* @param {string} a\n*/\nfunction _atob(a){\n  if (isBrowser || isWebWorker) return window.atob(a);\n  else if (isJsDom || isNode) return Buffer.from(a, 'base64').toString('binary');\n}\n\n/* global global */\n\n\nconst DEFAULT_QUEUE_SIZE = 128;        // max number of old unreceived messages to store\nconst DEFAULT_TIMEOUT$1 = 10000;         // default timeout for requests in milliseconds\n\nconst GATEWAY_DEFAULTS = {\n  'timeout': DEFAULT_TIMEOUT$1,\n  'keepAlive' : true,\n  'queueSize': DEFAULT_QUEUE_SIZE,\n  'returnNullOnFailedResponse': true\n};\n\nlet DEFAULT_URL;\nlet gObj = {};\n\n/**\n*\n* @private\n*\n* Initializes the Gateway module. This function should be called before using the Gateway class.\n* It sets up the default values for the Gateway and initializes the global object.\n* It also sets up the default URL for the Gateway based on the environment (browser, Node.js, etc.).\n* @returns {void}\n*/\nfunction init(){\n  if (isBrowser || isWebWorker){\n    gObj = window;\n    Object.assign(GATEWAY_DEFAULTS, {\n      'hostname': gObj.location.hostname,\n      'port': gObj.location.port,\n      'pathname' : '/ws/'\n    });\n    DEFAULT_URL = new URL('ws://localhost');\n    // Enable caching of Gateways in browser\n    if (typeof gObj.fjage === 'undefined') gObj.fjage = {};\n    if (typeof gObj.fjage.gateways == 'undefined') gObj.fjage.gateways = [];\n  } else if (isJsDom || isNode){\n    gObj = global;\n    Object.assign(GATEWAY_DEFAULTS, {\n      'hostname': 'localhost',\n      'port': '1100',\n      'pathname': ''\n    });\n    DEFAULT_URL = new URL('tcp://localhost');\n  }\n}\n\n/**\n* A gateway for connecting to a fjage master container. This class provides methods to\n* send and receive messages, subscribe to topics, and manage connections to the master container.\n* It can be used to connect to a fjage master container over WebSockets or TCP.\n*\n* @example <caption>Connects to the localhost:1100</caption>\n* const gw = new Gateway({ hostname: 'localhost', port: 1100 });\n*\n* @example <caption>Connects to the origin</caption>\n* const gw = new Gateway();\n*\n* @class\n* @property {AgentID} aid - agent id of the gateway\n* @property {boolean} connected - true if the gateway is connected to the master container\n* @property {boolean} debug - true if debug messages should be logged to the console\n*\n* Constructor arguments:\n* @param {Object} opts\n* @param {string} [opts.hostname=\"localhost\"] - hostname/ip address of the master container to connect to\n* @param {number} [opts.port=1100]          - port number of the master container to connect to\n* @param {string} [opts.pathname=\"\"]        - path of the master container to connect to (for WebSockets)\n* @param {boolean} [opts.keepAlive=true]     - try to reconnect if the connection is lost\n* @param {number} [opts.queueSize=128]      - size of the _queue of received messages that haven't been consumed yet\n* @param {number} [opts.timeout=10000]       - timeout for fjage level messages in ms\n* @param {boolean} [opts.returnNullOnFailedResponse=true] - return null instead of throwing an error when a parameter is not found\n* @param {boolean} [opts.cancelPendingOnDisconnect=false] - cancel pending requests on disconnects\n*/\nclass Gateway {\n\n  constructor(opts = {}) {\n    // Similar to Object.assign but also overwrites `undefined` and empty strings with defaults\n    for (var key in GATEWAY_DEFAULTS){\n      if (opts[key] == undefined || opts[key] === '') opts[key] = GATEWAY_DEFAULTS[key];\n    }\n    var url = DEFAULT_URL;\n    url.hostname = opts.hostname;\n    url.port = opts.port;\n    url.pathname = opts.pathname;\n    let existing = this._getGWCache(url);\n    if (existing) return existing;\n    this._timeout = opts.timeout;         // timeout for fjage level messages (agentForService etc)\n    this._keepAlive = opts.keepAlive;     // reconnect if connection gets closed/errored\n    this._queueSize = opts.queueSize;     // size of _queue\n    this._returnNullOnFailedResponse = opts.returnNullOnFailedResponse; // null or error\n    this._cancelPendingOnDisconnect = opts.cancelPendingOnDisconnect; // cancel pending requests on disconnect\n    this._pending_actions = {};            // msgid to callback mapping for pending actions\n    this._subscriptions = {};              // map for all topics that are subscribed\n    this._pending_receives = {};           // uuid to callbacks mapping for pending receives\n    this._eventListeners = {};             // external listeners wanting to listen internal events\n    this._queue = [];                      // incoming message _queue\n    this.connected = false;               // connection status\n    this.debug = false;                   // debug info to be logged to console?\n    this.aid = new AgentID('gateway-'+_guid(4));         // gateway agent name\n    this.connector = this._createConnector(url);\n    this._addGWCache(this);\n  }\n\n  /**\n  * Sends an event to all registered listeners of the given type.\n  * @private\n  * @param {string} type - type of event\n  * @param {Object|Message|string} val - value to be sent to the listeners\n  */\n  _sendEvent(type, val) {\n    if (!Array.isArray(this._eventListeners[type])) return;\n    this._eventListeners[type].forEach(l => {\n      if (l && {}.toString.call(l) === '[object Function]'){\n        try {\n          l(val);\n        } catch (error) {\n          console.warn('Error in event listener : ' + error);\n        }\n      }\n    });\n  }\n\n  /**\n  * Sends the message to all registered receivers.\n  *\n  * @private\n  * @param {Message} msg\n  * @returns {boolean} - true if the message was consumed by any listener\n  */\n  _sendReceivers(msg) {\n    for (var lid in this._pending_receives){\n      try {\n        if (this._pending_receives[lid] && this._pending_receives[lid](msg)) return true;\n      } catch (error) {\n        console.warn('Error in listener : ' + error);\n      }\n    }\n    return false;\n  }\n\n\n  /**\n  * @private\n  * @param {string} data - stringfied JSON data received from the master container to be processed\n  * @returns {void}\n  */\n  _onMsgRx(data) {\n    var jsonMsg;\n    if (this.debug) console.log('< '+data);\n    this._sendEvent('rx', data);\n    try {\n      jsonMsg = new JSONMessage(data, this);\n    }catch(e){\n      return;\n    }\n    this._sendEvent('rxp', jsonMsg);\n    if (jsonMsg.id && jsonMsg.id in this._pending_actions) {\n      // response to a pending request to master\n      this._pending_actions[jsonMsg.id](jsonMsg);\n      delete this._pending_actions[jsonMsg.id];\n    } else if (jsonMsg.action == Actions.SEND) {\n      // incoming message from master\n      const msg = jsonMsg.message;\n      if (!msg) return;\n      this._sendEvent('rxmsg', msg);\n      if ((msg.recipient.toJSON() == this.aid.toJSON())|| this._subscriptions[msg.recipient.toJSON()]) {\n        // send to any \"message\" listeners\n        this._sendEvent('message', msg);\n        // send message to receivers, if not consumed, add to _queue\n        if(!this._sendReceivers(msg)) {\n          if (this._queue.length >= this._queueSize) this._queue.shift();\n          this._queue.push(msg);\n        }\n      }\n    } else {\n      // respond to standard requests that every gateway must\n      let rsp = new JSONMessage();\n      rsp.id = jsonMsg.id;\n      rsp.inResponseTo = jsonMsg.action;\n      switch (jsonMsg.action) {\n        case 'agents':\n        rsp.agentIDs = [this.aid];\n        break;\n        case 'containsAgent':\n        rsp.answer = (jsonMsg.agentID.toJSON() == this.aid.toJSON());\n        break;\n        case 'services':\n        rsp.services = [];\n        break;\n        case 'agentForService':\n        rsp.agentID = '';\n        break;\n        case 'agentsForService':\n        rsp.agentIDs = [];\n        break;\n        default:\n        rsp = undefined;\n      }\n      if (rsp) this._msgTx(rsp);\n    }\n  }\n\n  /**\n  * Sends a message out to the master container. This method is used for sending\n  * fjage level actions that do not require a response, such as alive, wantMessages, etc.\n  * @private\n  * @param {JSONMessage} msg - JSONMessage to be sent to the master container\n  * @returns {boolean} - true if the message was sent successfully\n  */\n  _msgTx(msg) {\n    const s = msg.toJSON();\n    if(this.debug) console.log('> '+s);\n    this._sendEvent('tx', s);\n    return this.connector.write(s);\n  }\n\n  /**\n  * Send a message to the master container and wait for a response. This method is used for sending\n  * fjage level actions that require a response, such as agentForService, agents, etc.\n  * @private\n  * @param {JSONMessage} rq - JSONMessage to be sent to the master container\n  * @param {number} [timeout=opts.timeout] - timeout in milliseconds for the response\n  * @returns {Promise<JSONMessage|null>} - a promise which returns the response from the master container\n  */\n  _msgTxRx(rq, timeout = this._timeout) {\n    rq.id = UUID7.generate().toString();\n    return new Promise(resolve => {\n      let timer;\n      if (timeout >= 0){\n        timer = setTimeout(() => {\n          delete this._pending_actions[rq.id];\n          if (this.debug) console.log('Receive Timeout : ' + JSON.stringify(rq));\n          resolve(null);\n        }, timeout);\n      }\n      this._pending_actions[rq.id] = rsp => {\n        if (timer) clearTimeout(timer);\n        resolve(rsp);\n      };\n      if (!this._msgTx.call(this,rq)) {\n        if(timer) clearTimeout(timer);\n        delete this._pending_actions[rq.id];\n        if (this.debug) console.log('Transmit Failure : ' +  JSON.stringify(rq));\n        resolve(null);\n      }\n    });\n  }\n\n  /**\n  * @private\n  * @param {URL} url - URL object of the master container to connect to\n  * @returns {TCPConnector|WSConnector} - connector object to connect to the master container\n  */\n  _createConnector(url){\n    let conn;\n    if (url.protocol.startsWith('ws')){\n      conn =  new WSConnector({\n        'hostname':url.hostname,\n        'port':parseInt(url.port),\n        'pathname':url.pathname,\n        'keepAlive': this._keepAlive,\n        'debug': this.debug\n      });\n    }else if (url.protocol.startsWith('tcp')){\n      conn = new TCPConnector({\n        'hostname':url.hostname,\n        'port':parseInt(url.port),\n        'keepAlive': this._keepAlive,\n        'debug': this.debug\n      });\n    } else return null;\n    conn.setReadCallback(this._onMsgRx.bind(this));\n    conn.addConnectionListener(state => {\n      this.connected = !!state;\n      if (state == true){\n        this.flush();\n        this.connector.write('{\"alive\": true}');\n        this._update_watch();\n      } else {\n        if (this._cancelPendingOnDisconnect) {\n          this._sendReceivers(null);\n          this.flush();\n        }\n      }\n      this._sendEvent('conn', state);\n    });\n    return conn;\n  }\n\n  /**\n  * Checks if the object is a constructor.\n  *\n  * @private\n  * @param {Object} value - an object to be checked if it is a constructor\n  * @returns {boolean} - if the object is a constructor\n  */\n  _isConstructor(value) {\n    try {\n      new new Proxy(value, {construct() { return {}; }});\n      return true;\n    } catch (err) {\n      return false;\n    }\n  }\n\n  /**\n  * Matches a message with a filter.\n  * @private\n  * @param {string|Object|function} filter - filter to be matched\n  * @param {Message} msg - message to be matched to the filter\n  * @returns {boolean} - true if the message matches the filter\n  */\n  _matchMessage(filter, msg){\n    if (typeof filter == 'string' || filter instanceof String) {\n      return 'inReplyTo' in msg && msg.inReplyTo == filter;\n    } else if (Object.prototype.hasOwnProperty.call(filter, 'msgID')) {\n      return 'inReplyTo' in msg && msg.inReplyTo == filter.msgID;\n    } else if (filter.__proto__.name == 'Message' || filter.__proto__.__proto__.name == 'Message') {\n      return filter.__clazz__ == msg.__clazz__;\n    } else if (typeof filter == 'function' && !this._isConstructor(filter)) {\n      try {\n        return filter(msg);\n      }catch(e){\n        console.warn('Error in filter : ' + e);\n        return false;\n      }\n    } else {\n      return msg instanceof filter;\n    }\n  }\n\n  /**\n  * Gets the next message from the _queue that matches the filter.\n  * @private\n  * @param {string|Object|function} filter - filter to be matched\n  */\n  _getMessageFromQueue(filter) {\n    if (!this._queue.length) return;\n    if (!filter) return this._queue.shift();\n    let matchedMsg = this._queue.find( msg => this._matchMessage(filter, msg));\n    if (matchedMsg) this._queue.splice(this._queue.indexOf(matchedMsg), 1);\n    return matchedMsg;\n  }\n\n  /**\n  * Gets a cached gateway object for the given URL (if it exists).\n  * @private\n  * @param {URL} url - URL object of the master container to connect to\n  * @returns {Gateway|void} - gateway object for the given URL\n  */\n  _getGWCache(url){\n    if (!gObj.fjage || !gObj.fjage.gateways) return null;\n    var f = gObj.fjage.gateways.filter(g => g.connector.url.toString() == url.toString());\n    if (f.length ) return f[0];\n    return null;\n  }\n\n  /**\n  * Adds a gateway object to the cache if it doesn't already exist.\n  * @private\n  * @param {Gateway} gw - gateway object to be added to the cache\n  */\n  _addGWCache(gw){\n    if (!gObj.fjage || !gObj.fjage.gateways) return;\n    gObj.fjage.gateways.push(gw);\n  }\n\n  /**\n  * Removes a gateway object from the cache if it exists.\n  * @private\n  * @param {Gateway} gw - gateway object to be removed from the cache\n  */\n  _removeGWCache(gw){\n    if (!gObj.fjage || !gObj.fjage.gateways) return;\n    var index = gObj.fjage.gateways.indexOf(gw);\n    if (index != null) gObj.fjage.gateways.splice(index,1);\n  }\n\n  /** @private */\n  _update_watch() {\n    let watch = Object.keys(this._subscriptions);\n    watch.push(this.aid.toJSON());\n    const jsonMsg = JSONMessage.createWantsMessagesFor(watch.map(id => AgentID.fromJSON(id)));\n    this._msgTx(jsonMsg);\n  }\n\n  /**\n  * Add an event listener to listen to various events happening on this Gateway\n  *\n  * @param {string} type - type of event to be listened to\n  * @param {function} listener - new callback/function to be called when the event happens\n  * @returns {void}\n  */\n  addEventListener(type, listener) {\n    if (!Array.isArray(this._eventListeners[type])){\n      this._eventListeners[type] = [];\n    }\n    this._eventListeners[type].push(listener);\n  }\n\n  /**\n  * Remove an event listener.\n  *\n  * @param {string} type - type of event the listener was for\n  * @param {function} listener - callback/function which was to be called when the event happens\n  * @returns {void}\n  */\n  removeEventListener(type, listener) {\n    if (!this._eventListeners[type]) return;\n    let ndx = this._eventListeners[type].indexOf(listener);\n    if (ndx >= 0) this._eventListeners[type].splice(ndx, 1);\n  }\n\n  /**\n  * Add a new listener to listen to all {Message}s sent to this Gateway\n  *\n  * @param {function} listener - new callback/function to be called when a {Message} is received\n  * @returns {void}\n  */\n  addMessageListener(listener) {\n    this.addEventListener('message',listener);\n  }\n\n  /**\n  * Remove a message listener.\n  *\n  * @param {function} listener - removes a previously registered listener/callback\n  * @returns {void}\n  */\n  removeMessageListener(listener) {\n    this.removeEventListener('message', listener);\n  }\n\n  /**\n  * Add a new listener to get notified when the connection to master is created and terminated.\n  *\n  * @param {function} listener - new callback/function to be called connection to master is created and terminated\n  * @returns {void}\n  */\n  addConnListener(listener) {\n    this.addEventListener('conn', listener);\n  }\n\n  /**\n  * Remove a connection listener.\n  *\n  * @param {function} listener - removes a previously registered listener/callback\n  * @returns {void}\n  */\n  removeConnListener(listener) {\n    this.removeEventListener('conn', listener);\n  }\n\n  /**\n  * Gets the agent ID associated with the gateway.\n  *\n  * @returns {AgentID} - agent ID\n  */\n  getAgentID() {\n    return this.aid;\n  }\n\n  /**\n  * Get an AgentID for a given agent name.\n  *\n  * @param {string} name - name of agent\n  * @returns {AgentID} - AgentID for the given name\n  */\n  agent(name) {\n    return new AgentID(name, false, this);\n  }\n\n  /**\n  * Returns an object representing the named topic.\n  *\n  * @param {string|AgentID} topic - name of the topic or AgentID\n  * @param {string} [topic2] - name of the topic if the topic param is an AgentID\n  * @returns {AgentID} - object representing the topic\n  */\n  topic(topic, topic2) {\n    if (typeof topic == 'string' || topic instanceof String) return new AgentID(topic, true, this);\n    if (topic instanceof AgentID) {\n      if (topic.isTopic()) return topic;\n      return new AgentID(topic.getName()+(topic2 ? '__' + topic2 : '')+'__ntf', true, this);\n    }\n  }\n\n  /**\n  * Subscribes the gateway to receive all messages sent to the given topic.\n  *\n  * @param {AgentID} topic - the topic to subscribe to\n  * @returns {boolean} - true if the subscription is successful, false otherwise\n  */\n  subscribe(topic) {\n    if (!topic.isTopic()) topic = new AgentID(topic.getName() + '__ntf', true, this);\n    this._subscriptions[topic.toJSON()] = true;\n    this._update_watch();\n    return true;\n  }\n\n  /**\n  * Unsubscribes the gateway from a given topic.\n  *\n  * @param {AgentID} topic - the topic to unsubscribe\n  * @returns {void}\n  */\n  unsubscribe(topic) {\n    if (!topic.isTopic()) topic = new AgentID(topic.getName() + '__ntf', true, this);\n    delete this._subscriptions[topic.toJSON()];\n    this._update_watch();\n  }\n\n  /**\n  * Gets a list of all agents in the container.\n  * @param {number} [timeout=opts.timeout] - timeout in milliseconds\n  * @returns {Promise<AgentID[]>} - a promise which returns an array of all agent ids when resolved\n  */\n  async agents(timeout=this._timeout) {\n    let jsonMsg = JSONMessage.createAgents();\n    let rsp = await this._msgTxRx(jsonMsg, timeout);\n    if (!rsp || !Array.isArray(rsp.agentIDs)) throw new Error('Unable to get agents');\n    return rsp.agentIDs;\n  }\n\n  /**\n  * Check if an agent with a given name exists in the container.\n  *\n  * @param {AgentID|string} agentID - the agent id to check\n  * @param {number} [timeout=opts.timeout] - timeout in milliseconds\n  * @returns {Promise<boolean>} - a promise which returns true if the agent exists when resolved\n  */\n  async containsAgent(agentID, timeout=this._timeout) {\n    let jsonMsg = JSONMessage.createContainsAgent(agentID instanceof AgentID ? agentID : new AgentID(agentID));\n    let rsp = await this._msgTxRx(jsonMsg, timeout);\n    if (!rsp) {\n      if (this._returnNullOnFailedResponse) return null;\n      else throw new Error('Unable to check if agent exists');\n    }\n    return !!rsp.answer;\n  }\n\n  /**\n  * Finds an agent that provides a named service. If multiple agents are registered\n  * to provide a given service, any of the agents' id may be returned.\n  *\n  * @param {string} service - the named service of interest\n  * @param {number} [timeout=opts.timeout] - timeout in milliseconds\n  * @returns {Promise<?AgentID>} - a promise which returns an agent id for an agent that provides the service when resolved\n  */\n  async agentForService(service, timeout=this._timeout) {\n    let jsonMsg = JSONMessage.createAgentForService(service);\n    let rsp = await this._msgTxRx(jsonMsg, timeout);\n    if (!rsp) {\n      if (this._returnNullOnFailedResponse) return null;\n      else throw new Error('Unable to get agent for service');\n    }\n    return rsp.agentID;\n  }\n\n  /**\n  * Finds all agents that provides a named service.\n  *\n  * @param {string} service - the named service of interest\n  * @param {number} [timeout=opts.timeout] - timeout in milliseconds\n  * @returns {Promise<AgentID[]>} - a promise which returns an array of all agent ids that provides the service when resolved\n  */\n  async agentsForService(service, timeout=this._timeout) {\n    let jsonMsg = JSONMessage.createAgentsForService(service);\n    let rsp = await this._msgTxRx(jsonMsg, timeout);\n    if (!rsp) {\n      if (this._returnNullOnFailedResponse) return null;\n      else throw new Error('Unable to get agents for service');\n    }\n    return rsp.agentIDs || [];\n  }\n\n  /**\n  * Sends a message to the recipient indicated in the message. The recipient\n  * may be an agent or a topic.\n  *\n  * @param {Message} msg - message to be sent\n  * @returns {boolean} - if sending was successful\n  */\n  send(msg) {\n    msg.sender = this.aid;\n    this._sendEvent('txmsg', msg);\n    const jsonMsg = JSONMessage.createSend(msg, true);\n    return !!this._msgTx(jsonMsg);\n  }\n\n  /**\n  * Flush the Gateway _queue for all pending messages. This drops all the pending messages.\n  * @returns {void}\n  *\n  */\n  flush() {\n    this._queue.length = 0;\n  }\n\n  /**\n  * Sends a request and waits for a response. This method returns a {Promise} which resolves when a response\n  * is received or if no response is received after the timeout.\n  *\n  * @param {Message} msg - message to send\n  * @param {number} [timeout=opts.timeout] - timeout in milliseconds\n  * @returns {Promise<Message|void>} - a promise which resolves with the received response message, null on timeout\n  */\n  async request(msg, timeout=this._timeout) {\n    this.send(msg);\n    return this.receive(msg, timeout);\n  }\n\n  /**\n  * Returns a response message received by the gateway. This method returns a {Promise} which resolves when\n  * a response is received or if no response is received after the timeout.\n  *\n  * @param {function|Message|typeof Message} filter - original message to which a response is expected, or a MessageClass of the type\n  * of message to match, or a closure to use to match against the message\n  * @param {number} [timeout=0] - timeout in milliseconds\n  * @returns {Promise<Message|void>} - received response message, null on timeout\n  */\n  async receive(filter, timeout=0) {\n    return new Promise(resolve => {\n      let msg = this._getMessageFromQueue.call(this,filter);\n      if (msg) {\n        resolve(msg);\n        return;\n      }\n      if (timeout == 0) {\n        if (this.debug) console.log('Receive Timeout : ' + filter);\n        resolve();\n        return;\n      }\n      let lid = UUID7.generate().toString();\n      let timer;\n      if (timeout > 0){\n        timer = setTimeout(() => {\n          this._pending_receives[lid] && delete this._pending_receives[lid];\n          if (this.debug) console.log('Receive Timeout : ' + filter);\n          resolve();\n        }, timeout);\n      }\n      // listener for each pending receive\n      this._pending_receives[lid] = msg => {\n        // skip if the message does not match the filter\n        if (msg && !this._matchMessage(filter, msg)) return false;\n        if(timer) clearTimeout(timer);\n        // if the message matches the filter or is null, delete listener clear timer and resolve\n        this._pending_receives[lid] && delete this._pending_receives[lid];\n        resolve(msg);\n        return true;\n      };\n    });\n  }\n\n  /**\n  * Closes the gateway. The gateway functionality may not longer be accessed after\n  * this method is called.\n  * @returns {void}\n  */\n  close() {\n    this.connector.close();\n    this._removeGWCache(this);\n  }\n\n}\n\nconst DEFAULT_TIMEOUT = 10000; // Default timeout for non-owned AgentIDs\n\n\n/**\n* An identifier for an agent or a topic. This can be to send, receive messages, and set or get parameters\n* on an agent or topic on the fjåge master container.\n*\n* @class\n* @param {string} name - name of the agent\n* @param {boolean} [topic=false] - name of topic\n* @param {Gateway} [owner] - Gateway owner for this AgentID\n*/\nclass AgentID {\n\n  constructor(name, topic=false, owner) {\n    this.name = name;\n    this.topic = topic;\n    this.owner = owner;\n    this._timeout = owner ? owner._timeout : DEFAULT_TIMEOUT; // Default timeout if owner is not provided\n  }\n\n  /**\n  * Gets the name of the agent or topic.\n  *\n  * @returns {string} - name of agent or topic\n  */\n  getName() {\n    return this.name;\n  }\n\n  /**\n  * Returns true if the agent id represents a topic.\n  *\n  * @returns {boolean} - true if the agent id represents a topic, false if it represents an agent\n  */\n  isTopic() {\n    return this.topic;\n  }\n\n  /**\n  * Sends a message to the agent represented by this id.\n  *\n  * @param {Message} msg - message to send\n  * @returns {void}\n  */\n  send(msg) {\n    msg.recipient = this;\n    if (this.owner) this.owner.send(msg);\n    else throw new Error('Unowned AgentID cannot send messages');\n  }\n\n  /**\n  * Sends a request to the agent represented by this id and waits for a reponse.\n  *\n  * @param {Message} msg - request to send\n  * @param {number} [timeout=owner.timeout] - timeout in milliseconds\n  * @returns {Promise<Message>} - response\n  */\n  async request(msg, timeout=this._timeout) {\n    msg.recipient = this;\n    if (this.owner) return this.owner.request(msg, timeout);\n    else throw new Error('Unowned AgentID cannot send messages');\n  }\n\n  /**\n  * Gets a string representation of the agent id.\n  *\n  * @returns {string} - string representation of the agent id\n  */\n  toString() {\n    return this.toJSON() + ((this.owner && this.owner.connector) ? ` on ${this.owner.connector.url}` : '');\n  }\n\n  /**\n  * Gets a JSON string representation of the agent id.\n  *\n  * @returns {string} - JSON string representation of the agent id\n  */\n  toJSON() {\n    return (this.topic ? '#' : '') + this.name;\n  }\n\n  /**\n   * Inflate the AgentID from a JSON string or object.\n   *\n   * @param {string} json - JSON string or object to be converted to an AgentID\n   * @param {Gateway} [owner] - Gateway owner for this AgentID\n   * @returns {AgentID} - AgentID created from the JSON string or object\n   */\n  static fromJSON(json, owner) {\n    if (typeof json !== 'string') {\n      throw new Error('Invalid JSON for AgentID');\n    }\n    json = json.trim();\n    if (json.startsWith('#')) {\n      return new AgentID(json.substring(1), true, owner);\n    } else {\n      return new AgentID(json, false, owner);\n    }\n  }\n\n  /**\n  * Sets parameter(s) on the Agent referred to by this AgentID.\n  *\n  * @param {(string|string[])} params - parameters name(s) to be set\n  * @param {(Object|Object[])} values - parameters value(s) to be set\n  * @param {number} [index=-1] - index of parameter(s) to be set\n  * @param {number} [timeout=owner.timeout] - timeout for the response\n  * @returns {Promise<(Object|Object[])>} - a promise which returns the new value(s) of the parameters\n  */\n  async set (params, values, index=-1, timeout=this._timeout) {\n    if (!params) return null;\n    let msg = new ParameterReq();\n    msg.recipient = this;\n    if (Array.isArray(params)){\n      if (params.length != values.length) throw new Error(`Parameters and values arrays must have the same length: ${params.length} != ${values.length}`);\n      const clonedParams = params.slice(); // Clone the array to avoid side effects\n      const clonedValues = values.slice(); // Clone the values array\n      msg.param = clonedParams.shift();\n      msg.value = clonedValues.shift();\n      msg.requests = clonedParams.map((p, i) => {\n        return {\n          'param': p,\n          'value': clonedValues[i]\n        };\n      });\n    } else {\n      msg.param = params;\n      msg.value = values;\n    }\n    msg.index = Number.isInteger(index) ? index : -1;\n    const rsp = await this.owner.request(msg, timeout);\n    var ret = Array.isArray(params) ? new Array(params.length).fill(null) : null;\n    if (!rsp || rsp.perf != Performative.INFORM || !rsp.param) {\n      if (this.owner._returnNullOnFailedResponse) return ret;\n      else throw new Error(`Unable to set ${this.name}.${params} to ${values}`);\n    }\n    if (Array.isArray(params)) {\n      if (!rsp.values) rsp.values = {};\n      if (rsp.param) rsp.values[rsp.param] = rsp.value;\n      const rkeys = Object.keys(rsp.values);\n      return params.map( p => {\n        if (p.includes('.')) p = p.split('.').pop();\n        let f = rkeys.find(k => (k.includes('.') ? k.split('.').pop() : k) == p);\n        return f ? rsp.values[f] : undefined;\n      });\n    } else {\n      return rsp.value;\n    }\n  }\n\n\n  /**\n  * Gets parameter(s) on the Agent referred to by this AgentID.\n  *\n  * @param {(string|string[])} params - parameters name(s) to be get, null implies get value of all parameters on the Agent\n  * @param {number} [index=-1] - index of parameter(s) to be get\n  * @param {number} [timeout=owner.timeout] - timeout for the response\n  * @returns {Promise<(Object|Object[])>} - a promise which returns the value(s) of the parameters\n  */\n  async get(params, index=-1, timeout=this._timeout) {\n    let msg = new ParameterReq();\n    msg.recipient = this;\n    if (params){\n      if (Array.isArray(params)) {\n        const clonedParams = params.slice(); // Clone the array to avoid side effects\n        msg.param = clonedParams.shift();\n        msg.requests = clonedParams.map(p => {return {'param': p};});\n      }\n      else msg.param = params;\n    }\n    msg.index = Number.isInteger(index) ? index : -1;\n    const rsp = await this.owner.request(msg, timeout);\n    var ret = Array.isArray(params) ? new Array(params.length).fill(null) : null;\n    if (!rsp || rsp.perf != Performative.INFORM || !rsp.param) {\n      if (this.owner._returnNullOnFailedResponse) return ret;\n      else throw new Error(`Unable to get ${this.name}.${params}`);\n    }\n    // Request for listing of all parameters.\n    if (!params) {\n      if (!rsp.values) rsp.values = {};\n      if (rsp.param) rsp.values[rsp.param] = rsp.value;\n      return rsp.values;\n    } else if (Array.isArray(params)) {\n      if (!rsp.values) rsp.values = {};\n      if (rsp.param) rsp.values[rsp.param] = rsp.value;\n      const rkeys = Object.keys(rsp.values);\n      return params.map( p => {\n        if (p.includes('.')) p = p.split('.').pop();\n        let f = rkeys.find(k => (k.includes('.') ? k.split('.').pop() : k) == p);\n        return f ? rsp.values[f] : undefined;\n      });\n    } else {\n      return rsp.value;\n    }\n  }\n}\n\n/**\n* Base class for messages transmitted by one agent to another. Creates an empty message.\n* @class\n*\n* @property {string} msgID - unique message ID\n* @property {Performative} perf - performative of the message\n* @property {AgentID} [sender] - AgentID of the sender of the message\n* @property {AgentID} [recipient] - AgentID of the recipient of the message\n* @property {string} [inReplyTo] - ID of the message to which this message is a response\n* @property {number} [sentAt] - timestamp when the message was sent\n*/\nclass Message {\n\n  /**\n  * @param {Message} [inReplyToMsg] - message to which this message is a response\n  * @param {Performative} [perf=Performative.INFORM] - performative of the message\n  */\n  constructor(inReplyToMsg, perf=Performative.INFORM) {\n    this.__clazz__ = 'org.arl.fjage.Message';\n    this.msgID = UUID7.generate().toString();\n    this.perf = perf;\n    this.sender = null;\n    this.recipient = inReplyToMsg ? inReplyToMsg.sender : null;\n    this.inReplyTo = inReplyToMsg ? inReplyToMsg.msgID : null;\n  }\n\n  /**\n  * Gets a string representation of the message.\n  *\n  * @returns {string} - string representation\n  */\n  toString() {\n    let p = this.perf ? this.perf.toString() : 'MESSAGE';\n    if (this.__clazz__ == 'org.arl.fjage.Message') return p;\n    return p + ': ' + this.__clazz__.replace(/^.*\\./, '');\n  }\n\n  /** Convert a message into a object for JSON serialization.\n  *\n  * NOTE: we don't do any base64 encoding for TX as\n  *       we don't know what data type is intended\n  *\n  * @return {Object} - JSON string representation of the message\n  */\n  toJSON() {\n    let props = {};\n    for (let key in this) {\n      if (key.startsWith('_')) continue; // skip private properties\n      // @ts-ignore\n      props[key] = this[key];\n    }\n    return { 'clazz': this.__clazz__, 'data': props };\n  }\n\n\n  /**\n  * Create a message from a object parsed from the JSON representation of the message.\n  *\n  * @param {Object} jsonObj - Object containing all the properties of the message\n  * @returns {Message} - A message created from the Object\n  *\n  */\n  static fromJSON(jsonObj) {\n    if (!( 'clazz' in jsonObj) || !( 'data' in jsonObj)) {\n      throw new Error(`Invalid Object for Message : ${jsonObj}`);\n    }\n    let qclazz = jsonObj.clazz;\n    let clazz = qclazz.replace(/^.*\\./, '');\n    let rv = MessageClass[clazz] ? new MessageClass[clazz] : new Message();\n    rv.__clazz__ = qclazz;\n    // copy all properties from the data object\n    for (var key in jsonObj.data){\n      if (key === 'sender' || key === 'recipient') {\n        if (jsonObj.data[key] && typeof jsonObj.data[key] === 'string') {\n          rv[key] = AgentID.fromJSON(jsonObj.data[key]);\n        }\n      } else rv[key] = jsonObj.data[key];\n    }\n    return rv;\n  }\n}\n\n/**\n* A message class that can convey generic messages represented by key-value pairs.\n* @class\n* @extends Message\n*/\nclass GenericMessage extends Message {\n  /**\n  * Creates an empty generic message.\n  */\n  constructor() {\n    super();\n    this.__clazz__ = 'org.arl.fjage.GenericMessage';\n  }\n}\n\n/**\n* Creates a unqualified message class based on a fully qualified name.\n* @param {string} name - fully qualified name of the message class to be created\n* @param {typeof Message} [parent] - class of the parent MessageClass to inherit from\n* @constructs Message\n* @example\n* const ParameterReq = MessageClass('org.arl.fjage.param.ParameterReq');\n* let pReq = new ParameterReq()\n*/\nfunction MessageClass(name, parent=Message) {\n  let sname = name.replace(/^.*\\./, '');\n  if (MessageClass[sname]) return MessageClass[sname];\n  let cls = class extends parent {\n    /**\n    * @param {{ [x: string]: any; }} params\n    */\n    constructor(params) {\n      super();\n      this.__clazz__ = name;\n      if (params){\n        const keys = Object.keys(params);\n        for (let k of keys) {\n          this[k] = params[k];\n        }\n      }\n      if (name.endsWith('Req')) this.perf = Performative.REQUEST;\n    }\n  };\n  cls.__clazz__ = name;\n  MessageClass[sname] = cls;\n  return cls;\n}\n\n/**\n* @typedef {Object} ParameterReq.Entry\n* @property {string} param - parameter name\n* @property {Object} value - parameter value\n* @exports ParameterReq.Entry\n*/\n\n/**\n* A message that requests one or more parameters of an agent.\n*\n* @example <caption>Setting a parameter myAgent.x to 42</caption>\n* let req = new ParameterReq({\n*  recipient: myAgentId,\n*  param: 'x',\n*  value: 42\n* });\n*\n* @example <caption>Getting the value of myAgent.x</caption>\n* let req = new ParameterReq({\n* recipient: myAgentId,\n* param: 'x'\n* });\n*\n* @typedef {Message} ParameterReq\n* @property {string} param - parameters name to be get/set if only a single parameter is to be get/set\n* @property {Object} value - parameters value to be set if only a single parameter is to be set\n* @property {Array<ParameterReq.Entry>} requests - a list of multiple parameters to be get/set\n* @property {number} [index=-1] - index of parameter(s) to be set*\n* @exports ParameterReq\n*/\nconst ParameterReq = MessageClass('org.arl.fjage.param.ParameterReq');\n\n/**\n* A message that is a response to a {@link ParameterReq} message.\n*\n* @example <caption>Receiving a parameter from myAgent</caption>\n* let rsp = gw.receive(ParameterRsp)\n* rsp.sender // = myAgentId; sender of the message\n* rsp.param  // = 'x'; parameter name that was get/set\n* rsp.value  // = 42;  value of the parameter that was set\n* rsp.readonly // = [false]; indicates if the parameter is read-only\n*\n*\n* @typedef {Message} ParameterRsp\n* @property {string} param - parameters name if only a single parameter value was requested\n* @property {Object} value - parameters value if only a single parameter was requested\n* @property {Map<string, Object>} values - a map of multiple parameter names and their values if multiple parameters were requested\n* @property {Array<boolean>} readonly - a list of booleans indicating if the parameters are read-only\n* @property {number} [index=-1] - index of parameter(s) being returned\n* @exports ParameterReq\n*/\nconst ParameterRsp = MessageClass('org.arl.fjage.param.ParameterRsp');\n\n/**\n* Services supported by fjage agents.\n*/\nconst Services = {\n  SHELL : 'org.arl.fjage.shell.Services.SHELL'\n};\n\ninit();\n\nexport { AgentID, Gateway, GenericMessage, JSONMessage, Message, MessageClass, ParameterReq, ParameterRsp, Performative, Services };\n","import {AgentID, MessageClass, Services, Gateway} from 'fjage';\n\nconst DatagramReq = MessageClass('org.arl.unet.DatagramReq');\nconst DatagramNtf = MessageClass('org.arl.unet.DatagramNtf');\nconst TxFrameReq = MessageClass('org.arl.unet.phy.TxFrameReq', DatagramReq);\nconst RxFrameNtf = MessageClass('org.arl.unet.phy.RxFrameNtf', DatagramNtf);\nconst BasebandSignal = MessageClass('org.arl.unet.bb.BasebandSignal');\n\nlet UnetServices = {\n  'NODE_INFO': 'org.arl.unet.Services.NODE_INFO',\n  'ADDRESS_RESOLUTION': 'org.arl.unet.Services.ADDRESS_RESOLUTION',\n  'DATAGRAM': 'org.arl.unet.Services.DATAGRAM',\n  'PHYSICAL': 'org.arl.unet.Services.PHYSICAL',\n  'RANGING': 'org.arl.unet.Services.RANGING',\n  'BASEBAND': 'org.arl.unet.Services.BASEBAND',\n  'LINK': 'org.arl.unet.Services.LINK',\n  'MAC': 'org.arl.unet.Services.MAC',\n  'ROUTING': 'org.arl.unet.Services.ROUTING',\n  'ROUTE_MAINTENANCE': 'org.arl.unet.Services.ROUTE_MAINTENANCE',\n  'TRANSPORT': 'org.arl.unet.Services.TRANSPORT',\n  'REMOTE': 'org.arl.unet.Services.REMOTE',\n  'STATE_MANAGER': 'org.arl.unet.Services.STATE_MANAGER',\n  'DEVICE_INFO': 'org.arl.unet.Services.DEVICE_INFO',\n  'DOA': 'org.arl.unet.Services.DOA',\n  'SCHEDULER':'org.arl.unet.Services.SCHEDULER'\n};\n\nObject.assign(Services, UnetServices);\n\n/**\n * Well-known protocol number assignments used in UnetStack\n * @typedef {Object.<string, number>} Protocol\n */\nlet Protocol = {\n  'DATA' : 0,               // Protocol number for user application data.\n  'RANGING' : 1,            // Protocol number for use by ranging agents.\n  'LINK' : 2,               // Protocol number for use by link agents.\n  'REMOTE' : 3,             // Protocol number for use by remote management agents.\n  'MAC' : 4,                // Protocol number for use by MAC protocol agents.\n  'ROUTING' : 5,            // Protocol number for use by routing agents.\n  'TRANSPORT' : 6,          // Protocol number for use by transport agents.\n  'ROUTE_MAINTENANCE' : 7,   // Protocol number for use by route maintenance agents.\n  'LINK2' : 8,              // Protocol number for use by secondary link agents.\n  'USER' : 32,              // Lowest protocol number allowable for user protocols.\n  'MAX' : 63,               // Largest protocol number allowable.\n};\n\n/**\n * Well-known protocol Messages used in UnetStack\n * @typedef {Object.<string, MessageClass>} UnetMessages\n */\nlet UnetMessages = {\n  // unet\n  'TestReportNtf'          : MessageClass('org.arl.unet.TestReportNtf'),\n  'AbnormalTerminationNtf' : MessageClass('org.arl.unet.AbnormalTerminationNtf'),\n  'CapabilityListRsp'      : MessageClass('org.arl.unet.CapabilityListRsp'),\n  'CapabilityReq'          : MessageClass('org.arl.unet.CapabilityReq'),\n  'ClearReq'               : MessageClass('org.arl.unet.ClearReq'),\n  'DatagramCancelReq'      : MessageClass('org.arl.unet.DatagramCancelReq'),\n  'DatagramDeliveryNtf'    : MessageClass('org.arl.unet.DatagramDeliveryNtf'),\n  'DatagramFailureNtf'     : MessageClass('org.arl.unet.DatagramFailureNtf'),\n  'DatagramNtf'            : MessageClass('org.arl.unet.DatagramNtf'),\n  'DatagramProgressNtf'    : MessageClass('org.arl.unet.DatagramProgressNtf'),\n  'DatagramReq'            : MessageClass('org.arl.unet.DatagramReq'),\n  'ParamChangeNtf'         : MessageClass('org.arl.unet.ParamChangeNtf'),\n  'RefuseRsp'              : MessageClass('org.arl.unet.RefuseRsp'),\n  'FailureNtf'             : MessageClass('org.arl.unet.FailureNtf'),\n\n  // net\n  'DatagramTraceReq'       : MessageClass('org.arl.unet.net.DatagramTraceReq'),\n  'RouteDiscoveryReq'      : MessageClass('org.arl.unet.net.RouteDiscoveryReq'),\n  'RouteTraceReq'          : MessageClass('org.arl.unet.net.RouteTraceReq'),\n  'RouteDiscoveryNtf'      : MessageClass('org.arl.unet.net.RouteDiscoveryNtf'),\n  'RouteTraceNtf'          : MessageClass('org.arl.unet.net.RouteTraceNtf'),\n\n  // phy\n  'FecDecodeReq'           : MessageClass('org.arl.unet.phy.FecDecodeReq'),\n  'RxSWiG1FrameNtf'        : MessageClass('org.arl.unet.phy.RxSWiG1FrameNtf', RxFrameNtf),\n  'TxSWiG1FrameReq'        : MessageClass('org.arl.unet.phy.TxSWiG1FrameReq', TxFrameReq),\n  'RxJanusFrameNtf'        : MessageClass('org.arl.unet.phy.RxJanusFrameNtf', RxFrameNtf),\n  'TxJanusFrameReq'        : MessageClass('org.arl.unet.phy.TxJanusFrameReq', TxFrameReq),\n  'BadFrameNtf'            : MessageClass('org.arl.unet.phy.BadFrameNtf'),\n  'BadRangeNtf'            : MessageClass('org.arl.unet.phy.BadRangeNtf'),\n  'ClearSyncReq'           : MessageClass('org.arl.unet.phy.ClearSyncReq'),\n  'CollisionNtf'           : MessageClass('org.arl.unet.phy.CollisionNtf'),\n  'RxFrameNtf'             : MessageClass('org.arl.unet.phy.RxFrameNtf', DatagramNtf),\n  'RxFrameStartNtf'        : MessageClass('org.arl.unet.phy.RxFrameStartNtf'),\n  'SyncInfoReq'            : MessageClass('org.arl.unet.phy.SyncInfoReq'),\n  'SyncInfoRsp'            : MessageClass('org.arl.unet.phy.SyncInfoRsp'),\n  'TxFrameNtf'             : MessageClass('org.arl.unet.phy.TxFrameNtf'),\n  'TxFrameReq'             : MessageClass('org.arl.unet.phy.TxFrameReq', DatagramReq),\n  'TxFrameStartNtf'        : MessageClass('org.arl.unet.phy.TxFrameStartNtf'),\n  'TxRawFrameReq'          : MessageClass('org.arl.unet.phy.TxRawFrameReq'),\n\n  // addr\n  'AddressAllocReq'        : MessageClass('org.arl.unet.addr.AddressAllocReq'),\n  'AddressAllocRsp'        : MessageClass('org.arl.unet.addr.AddressAllocRsp'),\n  'AddressResolutionReq'   : MessageClass('org.arl.unet.addr.AddressResolutionReq'),\n  'AddressResolutionRsp'   : MessageClass('org.arl.unet.addr.AddressResolutionRsp'),\n\n  // bb\n  'BasebandSignal'         : MessageClass('org.arl.unet.bb.BasebandSignal'),\n  'RecordBasebandSignalReq' : MessageClass('org.arl.unet.bb.RecordBasebandSignalReq'),\n  'RxBasebandSignalNtf'    : MessageClass('org.arl.unet.bb.RxBasebandSignalNtf', BasebandSignal),\n  'TxBasebandSignalReq'    : MessageClass('org.arl.unet.bb.TxBasebandSignalReq', BasebandSignal),\n\n  // link\n  'LinkStatusNtf'          : MessageClass('org.arl.unet.link.LinkStatusNtf'),\n\n  // localization\n  'RangeNtf'               : MessageClass('org.arl.unet.localization.RangeNtf'),\n  'RangeReq'               : MessageClass('org.arl.unet.localization.RangeReq'),\n  'BeaconReq'              : MessageClass('org.arl.unet.localization.BeaconReq'),\n  'RespondReq'             : MessageClass('org.arl.unet.localization.RespondReq'),\n  'InterrogationNtf'       : MessageClass('org.arl.unet.localization.InterrogationNtf'),\n\n\n  // mac\n  'ReservationAcceptReq'   : MessageClass('org.arl.unet.mac.ReservationAcceptReq'),\n  'ReservationCancelReq'   : MessageClass('org.arl.unet.mac.ReservationCancelReq'),\n  'ReservationReq'         : MessageClass('org.arl.unet.mac.ReservationReq'),\n  'ReservationRsp'         : MessageClass('org.arl.unet.mac.ReservationRsp'),\n  'ReservationStatusNtf'   : MessageClass('org.arl.unet.mac.ReservationStatusNtf'),\n  'RxAckNtf'               : MessageClass('org.arl.unet.mac.RxAckNtf'),\n  'TxAckReq'               : MessageClass('org.arl.unet.mac.TxAckReq'),\n\n\n  // remote\n  'RemoteExecReq'          : MessageClass('org.arl.unet.remote.RemoteExecReq'),\n  'RemoteFailureNtf'       : MessageClass('org.arl.unet.remote.RemoteFailureNtf'),\n  'RemoteFileGetReq'       : MessageClass('org.arl.unet.remote.RemoteFileGetReq'),\n  'RemoteFileNtf'          : MessageClass('org.arl.unet.remote.RemoteFileNtf'),\n  'RemoteFilePutReq'       : MessageClass('org.arl.unet.remote.RemoteFilePutReq'),\n  'RemoteSuccessNtf'       : MessageClass('org.arl.unet.remote.RemoteSuccessNtf'),\n  'RemoteTextNtf'          : MessageClass('org.arl.unet.remote.RemoteTextNtf'),\n  'RemoteTextReq'          : MessageClass('org.arl.unet.remote.RemoteTextReq'),\n\n  // scheduler\n  'AddScheduledSleepReq'   : MessageClass('org.arl.unet.scheduler.AddScheduledSleepReq'),\n  'GetSleepScheduleReq'    : MessageClass('org.arl.unet.scheduler.GetSleepScheduleReq'),\n  'RemoveScheduledSleepReq' : MessageClass('org.arl.unet.scheduler.RemoveScheduledSleepReq'),\n  'SleepScheduleRsp'       : MessageClass('org.arl.unet.scheduler.SleepScheduleRsp'),\n  'WakeFromSleepNtf'       : MessageClass('org.arl.unet.scheduler.WakeFromSleepNtf'),\n\n  // state\n  'ClearStateReq'          : MessageClass('org.arl.unet.state.ClearStateReq'),\n  'SaveStateReq'           : MessageClass('org.arl.unet.state.SaveStateReq')\n};\n\n/**\n  * Convert coordinates from a local coordinates to GPS coordinate\n  * @param {Array} origin - Local coordinate system's origin as `[latitude, longitude]`\n  * @param {Number} x - X coordinate of the local coordinate to be converted\n  * @param {Number} y - Y coordinate of the local coordinate to be converted\n  * @returns {Array} - GPS coordinates (in decimal degrees) as `[latitude, longitude]`\n  */\n\nexport function toGps(origin, x, y) {\n  let coords = [] ;\n  let [xScale,yScale] = _initConv(origin[0]);\n  coords[1] = x/xScale + origin[1];\n  coords[0] = y/yScale + origin[0];\n  return coords;\n}\n\n/**\n  * Convert coordinates from a GPS coordinates to local coordinate\n  * @param {Array} origin - Local coordinate system's origin as `[latitude, longitude]`\n  * @param {Number} lat - Latitude of the GPS coordinate to be converted\n  * @param {Number} lon - Longitude of the GPS coordinate to be converted\n  * @returns {Array} - GPS coordinates (in decimal degrees) as `[latitude, longitude]`\n  */\nexport function toLocal(origin, lat, lon) {\n  let pos = [];\n  let [xScale,yScale] = _initConv(origin[0]);\n  pos[0] = (lon-origin[1]) * xScale;\n  pos[1] = (lat-origin[0]) * yScale;\n  return pos;\n}\n\nfunction _initConv(lat){\n  let rlat = lat * Math.PI/180;\n  let yScale = 111132.92 - 559.82*Math.cos(2*rlat) + 1.175*Math.cos(4*rlat) - 0.0023*Math.cos(6*rlat);\n  let xScale = 111412.84*Math.cos(rlat) - 93.5*Math.cos(3*rlat) + 0.118*Math.cos(5*rlat);\n  return [xScale, yScale];\n}\n\n/**\n * A message which requests the transmission of the datagram from the Unet\n *\n * @typedef {Message} DatagramReq\n * @property {number[]} data - data as an Array of bytes\n * @property {number} from - from/source node address\n * @property {number} to - to/destination node address\n * @property {number} protocol - protocol number to be used to send this Datagram\n * @property {boolean} reliability - true if Datagram should be reliable, false if unreliable\n * @property {number} ttl - time-to-live for the datagram. Time-to-live is advisory, and an agent may choose it ignore it\n */\n\n/**\n * Notification of received datagram message received by the Unet node.\n *\n * @typedef {Message} DatagramNtf\n * @property {number[]} data - data as an Array of bytes\n * @property {number} from - from/source node address\n * @property {number} to - to/destination node address\n * @property {number} protocol - protocol number to be used to send this Datagram\n * @property {number} ttl - time-to-live for the datagram. Time-to-live is advisory, and an agent may choose it ignore it\n */\n\n/**\n * An identifier for an agent or a topic.\n * @external AgentID\n * @see {@link https://org-arl.github.io/fjage/jsdoc/|fjåge.js Documentation}\n */\n\n/**\n * Services supported by fjage agents.\n * @external Services\n * @see {@link https://org-arl.github.io/fjage/jsdoc/|fjåge.js Documentation}\n */\n\n/**\n *  An action represented by a message.\n * @external Performative\n * @see {@link https://org-arl.github.io/fjage/jsdoc/|fjåge.js Documentation}\n */\n\n/**\n * Function to creates a unqualified message class based on a fully qualified name.\n * @external MessageClass\n * @see {@link https://org-arl.github.io/fjage/jsdoc/|fjåge.js Documentation}\n */\n\n/**\n * A caching CachingAgentID which caches Agent parameters locally.\n *\n * @class\n * @extends AgentID\n * @param {string | AgentID} name - name of the agent or an AgentID to copy\n * @param {boolean} topic - name of topic\n * @param {Gateway} owner - Gateway owner for this AgentID\n * @param {Boolean} [greedy=true] - greedily fetches and caches all parameters if this Agent\n *\n*/\nclass CachingAgentID extends AgentID {\n\n  constructor(name, topic, owner, greedy=true) {\n    if (name instanceof AgentID) {\n      super(name.getName(), name.topic, name.owner);\n    } else {\n      super(name, topic, owner);\n    }\n    this.greedy = greedy;\n    this.cache = {};\n    this.specialParams = ['name', 'version'];\n  }\n\n  /**\n   * Sets parameter(s) on the Agent referred to by this AgentID, and caches the parameter(s).\n   *\n   * @param {(string|string[])} params - parameters name(s) to be set\n   * @param {(Object|Object[])} values - parameters value(s) to be set\n   * @param {number} [index=-1] - index of parameter(s) to be set\n   * @param {number} [timeout=5000] - timeout for the response\n   * @returns {Promise<(Object|Object[])>} - a promise which returns the new value(s) of the parameters\n   */\n  async set(params, values, index=-1, timeout=5000) {\n    let s = await super.set(params, values, index, timeout);\n    this._updateCache(params, s, index);\n    return s;\n  }\n\n  /**\n   * Gets parameter(s) on the Agent referred to by this AgentID, getting them from the cache if possible.\n   *\n   * @param {(string|string[])} params - parameters name(s) to be fetched\n   * @param {number} [index=-1] - index of parameter(s) to be fetched\n   * @param {number} [timeout=5000] - timeout for the response\n   * @param {number} [maxage=5000] - maximum age of the cached result to retreive\n   * @returns {Promise<(Object|Object[])>} - a promise which returns the value(s) of the parameters\n   */\n  async get(params, index=-1, timeout=5000, maxage=5000) {\n    if (this._isCached(params, index, maxage)) return this._getCache(params, index);\n    if (this.greedy &&\n      !(Array.isArray(params) && [...new Set([...params, ...this.specialParams])].length!=0) &&\n      !this.specialParams.includes(params)) {\n      let rsp = await super.get(null, index, timeout);\n      this._updateCache(null, rsp, index);\n      if (!rsp) return Array.isArray(params) ? new Array(params.length).fill(null) : null;\n      if (!params) return rsp;\n      else if (Array.isArray(params)) {\n        return params.map(p => {\n          let f = Object.keys(rsp).find(rv => this._toNamed(rv) === p);\n          return f ? rsp[f] : null;\n        });\n      } else {\n        let f = Object.keys(rsp).find(rv => this._toNamed(rv) === params);\n        return f ? rsp[f] : null;\n      }\n    } else{\n      let r = await super.get(params, index, timeout);\n      this._updateCache(params, r, index);\n      return r;\n    }\n  }\n\n  _updateCache(params, vals, index) {\n    if (vals == null || Array.isArray(vals) && vals.every(v => v == null)) return;\n    if (params == null) {\n      params = Object.keys(vals);\n      vals = Object.values(vals);\n    } else if (!Array.isArray(params)) params = [params];\n    if (!Array.isArray(vals)) vals = [vals];\n    params = params.map(this._toNamed);\n    if (this.cache[index.toString()] === undefined) this.cache[index.toString()] = {};\n    let c = this.cache[index.toString()];\n    for (let i = 0; i < params.length; i++) {\n      if (c[params[i]] === undefined) c[params[i]] = {};\n      c[params[i]].value = vals[i];\n      c[params[i]].ctime = Date.now();\n    }\n  }\n\n  _isCached(params, index, maxage) {\n    if (maxage <= 0) return false;\n    if (params == null) return false;\n    let c = this.cache[index.toString()];\n    if (!c) {\n      return false;\n    }\n    if (!Array.isArray(params)) params = [params];\n    const rv = params.every(p => {\n      p = this._toNamed(p);\n      return (p in c) && (Date.now() - c[p].ctime <= maxage);\n    });\n    return rv;\n  }\n\n  _getCache(params, index) {\n    let c = this.cache[index.toString()];\n    if (!c) return null;\n    if (!Array.isArray(params)){\n      if (params in c) return c[params].value;\n      return null;\n    }else {\n      return params.map(p => p in c ? c[p].value : null);\n    }\n  }\n\n  _toNamed(param) {\n    const idx = param.lastIndexOf('.');\n    if (idx < 0) return param;\n    else return param.slice(idx+1);\n  }\n\n}\n\n\nclass CachingGateway extends Gateway{\n\n  /**\n   * Get an AgentID for a given agent name.\n   *\n   * @param {string} name - name of agent\n   * @param {Boolean} [caching=true] - if the AgentID should cache parameters\n   * @param {Boolean} [greedy=true] - greedily fetches and caches all parameters if this Agent\n   * @returns {AgentID|CachingAgentID} - AgentID for the given name\n   */\n  agent(name, caching=true, greedy=true) {\n    const aid = super.agent(name);\n    return caching ? new CachingAgentID(aid, null, null, greedy) : aid;\n  }\n\n  /**\n   * Returns an object representing the named topic.\n   *\n   * @param {string|AgentID} topic - name of the topic or AgentID\n   * @param {string} topic2 - name of the topic if the topic param is an AgentID\n   * @param {Boolean} [caching=true] - if the AgentID should cache parameters\n   * @param {Boolean} [greedy=true] - greedily fetches and caches all parameters if this Agent\n   * @returns {AgentID|CachingAgentID} - object representing the topic\n   */\n  topic(topic, topic2, caching=true, greedy=true) {\n    const aid = super.topic(topic, topic2);\n    return caching ? new CachingAgentID(aid, null, null, greedy) : aid;\n  }\n\n  /**\n   * Finds an agent that provides a named service. If multiple agents are registered\n   * to provide a given service, any of the agents' id may be returned.\n   *\n   * @param {string} service - the named service of interest\n   * @param {Boolean} [caching=true] - if the AgentID should cache parameters\n   * @param {Boolean} [greedy=true] - greedily fetches and caches all parameters if this Agent\n   * @returns {Promise<?AgentID|CachingAgentID>} - a promise which returns an agent id for an agent that provides the service when resolved\n   */\n  async agentForService(service, caching=true, greedy=true) {\n    const aid = await super.agentForService(service);\n    if (!aid) return aid;\n    return caching ? new CachingAgentID(aid, null, null, greedy) : aid;\n  }\n\n  /**\n   * Finds all agents that provides a named service.\n   *\n   * @param {string} service - the named service of interest\n   * @param {Boolean} [caching=true] - if the AgentID should cache parameters\n   * @param {Boolean} [greedy=true] - greedily fetches and caches all parameters if this Agent\n   * @returns {Promise<?AgentID|CachingAgentID[]>} - a promise which returns an array of all agent ids that provides the service when resolved\n   */\n  async agentsForService(service, caching=true, greedy=true) {\n    const aids = await super.agentsForService(service);\n    return caching ? aids.map(a => new CachingAgentID(a, null, null, greedy)) : aids;\n  }\n}\n\nexport {AgentID, Services, UnetMessages, Protocol, CachingGateway, CachingAgentID};\n","import {Gateway, Performative} from 'fjage';\nimport {Services, UnetMessages, Protocol} from './unetutils';\n\nconst REQUEST_TIMEOUT = 1000;\n\nconst AddressResolutionReq = UnetMessages.AddressResolutionReq;\nconst DatagramReq = UnetMessages.DatagramReq;\nconst DatagramNtf = UnetMessages.DatagramNtf;\nconst RxFrameNtf = UnetMessages.RxFrameNtf;\n\n/**\n * Creates a new UnetSocket to connect to a running Unet instance. This constructor returns a\n * {@link Promise} instead of the constructed UnetSocket object. Use `await` or `.then()` to get\n * a reference to the UnetSocket object. Based on if this is run in a Browser or Node.js,\n * it will internally connect over WebSockets or TCP respectively.\n *\n *\n * @class UnetSocket\n * @param {string} [hostname] - hostname/ip address of the master container to connect to\n * @param {string} [port] - port number of the master container to connect to\n * @param {string} [path='']  - path of the master container to connect to (for WebSockets)\n * @returns {Promise<UnetSocket>} - Promise which resolves to the UnetSocket object being constructed\n *\n * @example\n * let socket = await new UnetSocket('localhost', 8081, '/ws/');\n */\nexport default class UnetSocket {\n\n  constructor(hostname, port, path='') {\n    return (async () => {\n      this.gw = new Gateway({\n        hostname : hostname,\n        port : port,\n        path : path\n      });\n      this.localProtocol = -1;\n      this.remoteAddress = -1;\n      this.remoteProtocol = Protocol.DATA;\n      this.timeout = 0;\n      this.provider = null;\n      const alist = await this.gw.agentsForService(Services.DATAGRAM);\n      alist.forEach(a => {this.gw.subscribe(this.gw.topic(a));});\n      return this;\n    })();\n  }\n\n  /**\n   * Closes the socket. The socket functionality may not longer be accessed after this method is called.\n   * @returns {void}\n   */\n  close() {\n    this.gw.close();\n    this.gw = null;\n  }\n\n  /**\n   * Checks if a socket is closed.\n   * @returns {boolean} - true if closed, false if open\n   */\n  isClosed() {\n    return this.gw == null;\n  }\n\n  /**\n   * Binds a socket to listen to a specific protocol datagrams.\n   * Protocol numbers between Protocol.DATA+1 to Protocol.USER-1 are reserved protocols\n   * and cannot be bound. Unbound sockets listen to all unreserved\n   * @param {Protocol} protocol - protocol number to listen for\n   * @returns {boolean} - true on success, false on failure\n   */\n  bind(protocol) {\n    if (protocol == Protocol.DATA || (protocol >= Protocol.USER && protocol <= Protocol.MAX)) {\n      this.localProtocol = protocol;\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Unbinds a socket so that it listens to all unreserved protocols.\n   * Protocol numbers between Protocol.DATA+1 to Protocol.USER-1 are considered reserved.\n   * @returns {void}\n   */\n  unbind() { this.localProtocol = -1;}\n\n  /**\n   * Checks if a socket is bound.\n   * @returns {boolean} - true if bound to a protocol, false if unbound\n   */\n  isBound() { return this.localProtocol >= 0;}\n\n  /**\n   * Sets the default destination address and destination protocol number for datagrams sent\n   * using this socket. The defaults can be overridden for specific send() calls.\n   * The default protcol number when a socket is opened is Protcol.DATA.\n   * The default node address is undefined.\n   * Protocol numbers between Protocol.DATA+1 to Protocol.USER-1 are considered reserved,\n   * and cannot be used for sending datagrams using the socket.\n   *\n   * @param {number} to - default destination node address\n   * @param {Protocol} protocol - default protocol number\n   * @returns {boolean} - true on success, false on failure\n   */\n  connect(to, protocol) {\n    if (to >= 0 && (protocol == Protocol.DATA || (protocol >= Protocol.USER && protocol <= Protocol.MAX))) {\n      this.remoteAddress = to;\n      this.remoteProtocol = protocol;\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Resets the default destination address to undefined, and the default protocol number\n   * to Protocol.DATA.\n   * @returns {void}\n   */\n  disconnect() {\n    this.remoteAddress = -1;\n    this.remoteProtocol = 0;\n  }\n\n  /**\n   * Checks if a socket is connected, i.e., has a default destination address and protocol number.\n   * @returns {boolean} - true if connected, false otherwise\n   */\n  isConnected() { return this.remoteAddress >= 0; }\n\n  /**\n   * Gets the local node address of the Unet node connected to.\n   * @returns {Promise<int>} - local node address, or -1 on error\n   */\n  async getLocalAddress() {\n    if (this.gw == null) return -1;\n    const nodeinfo = await this.gw.agentForService(Services.NODE_INFO);\n    if (nodeinfo == null) return -1;\n    const addr = await nodeinfo.get('address');\n    return addr != null ? addr : -1;\n  }\n\n  /**\n   * Gets the protocol number that the socket is bound to.\n   * @returns {number}} - protocol number if socket is bound, -1 otherwise\n   */\n  getLocalProtocol() { return this.localProtocol; }\n\n  /**\n   * Gets the default destination node address for a connected socket.\n   * @returns {number}} - default destination node address if connected, -1 otherwise\n   */\n  getRemoteAddress() { return this.remoteAddress; }\n\n  /**\n   * Gets the default transmission protocol number.\n   * @returns {number}} - default protocol number used to transmit a datagram\n   */\n  getRemoteProtocol() { return this.remoteProtocol; }\n\n  /**\n   * Sets the timeout for datagram reception. A timeout of 0 means the\n   * {@link UnetSocket#receive|receive method} will check any appropriate\n   * Datagram has already been received (and is cached) else return immediately.\n   *\n   * @param {number} ms - timeout in milliseconds\n   * @returns {void}\n   */\n  setTimeout(ms) {\n    if (ms < 0) ms = 0;\n    this.timeout = ms;\n  }\n\n  /**\n   * Gets the timeout for datagram reception.\n   * @returns {number} - timeout in milliseconds\n   */\n  getTimeout() { return this.timeout; }\n\n  /**\n   * Transmits a datagram to the specified node address using the specified protocol.\n   * Protocol numbers between Protocol.DATA+1 to Protocol.USER-1 are considered reserved,\n   * and cannot be used for sending datagrams using the socket.\n   * @param {number[]|DatagramReq} data - data to be sent over the socket as an Array of bytes or DatagramReq\n   * @param {number} to - destination node address\n   * @param {number} protocol - protocol number\n   * @returns {Promise<boolean>} - true if the Unet node agreed to send out the Datagram, false otherwise\n   */\n  async send(data, to=this.remoteAddress, protocol=this.remoteProtocol) {\n    if (to < 0 || this.gw == null) return false;\n    var req;\n    if (Array.isArray(data)){\n      req = new DatagramReq();\n      req.data = data;\n      req.to = to;\n      req.protocol = protocol;\n    } else if (data instanceof DatagramReq){\n      req = data;\n    } else {\n      return false;\n    }\n    let p = req.protocol;\n    if (p != Protocol.DATA && (p < Protocol.USER || p > Protocol.MAX)) return false;\n    if (req.recipient == null) {\n      if (this.provider == null) this.provider = await this.gw.agentForService(Services.TRANSPORT);\n      if (this.provider == null) this.provider = await this.gw.agentForService(Services.ROUTING);\n      if (this.provider == null) this.provider = await this.gw.agentForService(Services.LINK);\n      if (this.provider == null) this.provider = await this.gw.agentForService(Services.PHYSICAL);\n      if (this.provider == null) this.provider = await this.gw.agentForService(Services.DATAGRAM);\n      if (this.provider == null) return false;\n      req.recipient = this.provider;\n    }\n    const rsp = await this.gw.request(req, REQUEST_TIMEOUT);\n    return (rsp != null && rsp.perf == Performative.AGREE);\n  }\n\n  /**\n   * Receives a datagram sent to the local node and the bound protocol number. If the socket is unbound,\n   * then datagrams with all unreserved protocols are received. Any broadcast datagrams are also received.\n   *\n   * @returns {Promise<?DatagramNtf>} - datagram received by the socket\n   */\n  async receive() {\n    if (this.gw == null) return null;\n    return await this.gw.receive(msg => {\n      if (msg.__clazz__ != DatagramNtf.__clazz__ && msg.__clazz__ != RxFrameNtf.__clazz__ ) return false;\n      let p = msg.protocol;\n      if (p == Protocol.DATA || p >= Protocol.USER) {\n        return this.localProtocol < 0 || this.localProtocol == p;\n      }\n      return false;\n    }, this.timeout);\n  }\n\n  /**\n   * Gets a Gateway to provide low-level access to UnetStack.\n   * @returns {Gateway} - underlying fjage Gateway supporting this socket\n   */\n  getGateway() { return this.gw; }\n\n  /**\n   * Gets an AgentID providing a specified service for low-level access to UnetStack\n   * @param {string} svc - the named service of interest\n   * @returns {Promise<?AgentID>} - a promise which returns an {@link AgentID} that provides the service when resolved\n   */\n  async agentForService(svc) {\n    if (this.gw == null) return null;\n    return await this.gw.agentForService(svc);\n  }\n\n  /**\n   *\n   * @param {string} svc - the named service of interest\n   * @returns {Promise<AgentID[]>} - a promise which returns an array of {@link AgentID|AgentIDs} that provides the service when resolved\n   */\n  async agentsForService(svc) {\n    if (this.gw == null) return null;\n    return await this.gw.agentsForService(svc);\n  }\n\n  /**\n   * Gets a named AgentID for low-level access to UnetStack.\n   * @param {string} name - name of agent\n   * @returns {AgentID} - AgentID for the given name\n   */\n  agent(name) {\n    if (this.gw == null) return null;\n    return this.gw.agent(name);\n  }\n\n  /**\n   * Resolve node name to node address.\n   * @param {string} nodeName - name of the node to resolve\n   * @returns {Promise<?number>} - address of the node, or null if unable to resolve\n   */\n  async host(nodeName) {\n    const arp = await this.agentForService(Services.ADDRESS_RESOLUTION);\n    if (arp == null) return null;\n    const req = new AddressResolutionReq(nodeName);\n    req.name = nodeName;\n    req.recipient = arp;\n    const rsp = await this.gw.request(req, REQUEST_TIMEOUT);\n    if (rsp == null || ! Object.prototype.hasOwnProperty.call(rsp, 'address')) return null;\n    return rsp.address;\n  }\n}"],"names":["DatagramReq","DatagramNtf","RxFrameNtf"],"mappings":"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","x_google_ignoreList":[0]}